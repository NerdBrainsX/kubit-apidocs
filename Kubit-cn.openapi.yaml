openapi: 3.1.0
info:
  title: Kubit 银行 API
  description: |
    **Kubit 银行 API** 是一个完整的解决方案，用于与 Kubit 在线银行系统集成。
    该 API 允许开发人员创建应用程序，以便与各种银行功能交互，
    包括用户身份验证、账户管理、资金转账、信用卡和借记卡管理，
    以及详细的交易记录和账户余额报表生成。

    ### 主要功能：
    
    - **身份验证和会话管理：** 允许用户安全登录并管理会话。 
    - **转账：** 促进同一银行内账户之间以及其他金融机构的资金转账。
    - **银行卡管理：** 允许管理信用卡和借记卡，包括激活、停用和详情查询。
    - **账户余额和交易查询：** 提供账户余额和交易的详细信息，并支持自定义报表生成。
    - **支付和服务：** 集成支付服务和其他金融交易功能。

    ### 安全性：
    
    所有 API 交互都需要通过 JWT 令牌进行身份验证。
    此外，建议使用 HTTPS 进行所有 API 通信，以确保数据的安全性和隐私性。

    ### 目标用户：
    
    该 API 旨在为需要集成银行功能的开发人员提供支持，
    适用于从移动应用程序到金融管理 Web 解决方案等各种场景。
  version: 0.0.1
tags: 
  - name: Authentication
    description: '与用户身份验证、会话管理和 OTP 相关的操作。'
  - name: Customers
    description: '与客户和合作伙伴相关的操作。'
  - name: Accounts
    description: '与账户及其交易相关的操作。'
  - name: Payments
    description: '与向其他银行转账相关的操作。'
  - name: Transfers
    description: '与账户间资金转移相关的操作。'
  - name: Cards
    description: '与实体卡和虚拟卡管理相关的操作。'
  - name: Reports
    description: '与报表生成相关的操作。'
paths:
  /api/v1/auth/login:
    post:
      summary: 用户身份验证
      deprecated: false
      description: |
        此端点允许用户进行身份验证。
      operationId: login
      tags: 
        - Authentication
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: '用于身份验证请求的唯一密钥。'
          required: true
          example: KU_{YOUR_KEY}
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: '用户名。'
                  example: '用户'
                password:
                  type: string
                  format: password
                  description: '用户密码。'
                  example: '1234567890'
              required:
                - password
                - username
      responses:
        '200':
          description: "成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求状态。'
                    example: "ok"
                  code:
                    type: integer
                    description: '与响应对应的 HTTP 状态代码。'
                    example: 200
                  data:
                    type: object
                    description: '包含返回数据的对象。'
                    properties:
                      token:
                        type: string
                        description: '用于身份验证请求的令牌。'
                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
                    required:
                      - token
        '400':
          description: '错误请求'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求状态。'
                    examples: 'fail'
                  code:
                    type: integer
                    description: '与响应对应的 HTTP 状态代码。'
                    example: 400
                  message:
                    type: string
                    description: '错误消息，指示请求格式不正确。'
                    example: Bad Request
        '401':
          description: '未经授权'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求状态。'
                    examples: 'fail'
                  code:
                    type: integer
                    description: '与响应对应的 HTTP 状态代码。'
                    example: 401
                  message:
                    type: string
                    description: '错误消息，指示用户无权执行所请求的操作。'
                    example: Unauthorized
'500':
  description: '内部服务器错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态代码。'
            example: 500
          message:
            type: string
            description: '错误消息，指示服务器内部故障。'
            example: Internal Server Error
security: []

/api/v1/auth/password/recovery:
  post:
    summary: 密码恢复
    deprecated: false
    description: |
      此端点允许生成新密码并将其发送到用户注册的电子邮件账户。
    operationId: password_recovery
    tags: 
      - Authentication
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于身份验证请求的唯一密钥。'
        required: true
        example: KU_{YOUR_KEY}
        schema:
          type: string
      - name: email
        in: query
        description: '用户的电子邮件。'
        required: true
        example: user@example.com
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 200
                data:
                  type: object
                  description: '包含返回数据的对象。'
                  properties:
                    token:
                      type: string
                      description: '用于身份验证请求的令牌。'
                      example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
                  required:
                    - token
      '400':
        description: '错误请求'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: Bad Request
      '401':
        description: '未经授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 401
                message:
                  type: string
                  description: '错误消息，指示用户无权执行所请求的操作。'
                  example: Unauthorized
      '500':
        description: '内部服务器错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'error'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 500
                message:
                  type: string
                  description: '错误消息，指示服务器内部故障。'
                  example: Internal Server Error
security: []

/api/v1/auth/logout:
  post:
    summary: 退出登录
    deprecated: false
    description: |
      此端点允许用户登出活动会话。
    operationId: logout
    tags: 
      - Authentication
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于身份验证请求的唯一密钥。'
        required: true
        example: KU_{YOUR_KEY}
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于身份验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 200
      '400':
        description: '错误请求'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: Bad Request
      '401':
        description: '未经授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 401
                message:
                  type: string
                  description: '错误消息，指示用户无权执行所请求的操作。'
                  example: Unauthorized
'500':
  description: '内部服务器错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态代码。'
            example: 500
          message:
            type: string
            description: '错误消息，指示服务器内部故障。'
            example: Internal Server Error
security: []

/api/v1/auth/users/authuser:
  get:
    summary: 获取已认证用户
    deprecated: false
    description: |
      此端点允许获取已认证用户的数据。
    operationId: auth_user
    tags: 
      - Authentication
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于身份验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于身份验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 200
                data:
                  type: array
                  description: '包含返回数据的对象。'
                  items:
                    properties:
                      id:
                        type: string
                        format: string
                        description: '用户唯一标识符。'
                      username:
                        type: string
                        format: string
                        description: '用户名。'
                      role_id:
                        type: integer
                        format: integer
                        description: '用户角色标识符。'
                      role:
                        type: string
                        format: string
                        description: '用户角色名称。'
                      profile_id:
                        type: integer
                        format: integer
                        description: '用户个人资料标识符。'
                      profile:
                        type: string
                        format: string
                        description: '用户个人资料名称。'
                      customer_id:
                        type: string
                        format: string
                        description: '与用户关联的客户标识符。'
                      customer_type:
                        type: integer
                        format: integer
                        description: '与用户关联的客户类型。'
                    required:
                      - id
                      - username
                      - role_id
                      - role
                      - profile_id
                      - profile
      '400':
        description: '错误请求'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: Bad Request
      '401':
        description: '未经授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 401
                message:
                  type: string
                  description: '错误消息，指示用户无权执行所请求的操作。'
                  example: Unauthorized
      '500':
        description: '内部服务器错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'error'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 500
                message:
                  type: string
                  description: '错误消息，指示服务器内部故障。'
                  example: Internal Server Error
security: []

/api/v1/auth/roles:
  get:
    summary: 获取用户角色
    deprecated: false
    description: |
      此端点允许获取用户角色信息。
    operationId: auth_roles
    tags: 
      - Authentication
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于身份验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于身份验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 200
                data:
                  type: array
                  description: '包含返回数据的对象。'
                  items:
                    properties:
                      id:
                        type: string
                        format: string
                        description: '角色唯一标识符。'
                      id_profile:
                        type: string
                        format: string
                        description: '与角色关联的配置文件唯一标识符。'
                      name:
                        type: string
                        format: string
                        description: '角色名称。'
                      description:
                        type: boolean
                        format: boolean
                        description: '角色描述。'
                      level:
                        type: integer
                        format: integer
                        description: '角色访问级别。'
                    required:
                      - id
                      - id_profile
                      - name
                      - description
                      - level
      '400':
        description: '错误请求'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: Bad Request
      '401':
        description: '未经授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 401
                message:
                  type: string
                  description: '错误消息，指示用户无权执行所请求的操作。'
                  example: Unauthorized
      '500':
        description: '内部服务器错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'error'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 500
                message:
                  type: string
                  description: '错误消息，指示服务器内部故障。'
                  example: Internal Server Error
    security: []

/api/v1/auth/profiles:
  get:
    summary: 获取用户配置文件
    deprecated: false
    description: |
      此端点允许获取与用户角色关联的配置文件信息。
    operationId: auth_profiles
    tags: 
      - Authentication
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于身份验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于身份验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态代码。'
                  example: 200
                data:
                  type: array
                  description: '包含返回数据的对象。'
                  items:
                    properties:
                      id:
                        type: string
                        format: string
                        description: '配置文件唯一标识符。'
                      name:
                        type: string
                        format: string
                        description: '配置文件名称。'
                    required:
                      - id
                      - name
 '400':
  description: '请求错误 (Bad Request)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 400
          message:
            type: string
            description: '错误信息，表示请求不正确。'
            example: 请求错误 (Bad Request)
'401':
  description: '未授权 (Unauthorized)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '错误信息，表示用户未授权执行请求的操作。'
            example: 未授权 (Unauthorized)
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/auth/2fa/enroll:
  post:
    summary: 注册OTP (Enroll OTP)
    deprecated: false
    description: |
      此端点用于注册OTP令牌以进行支付。
    operationId: auth_otp_enroll
    tags: 
      - 认证 (Authentication)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    responses:
      '200':
        description: "成功 (Ok)"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
                data:
                  type: string
                  description: 'Base64格式的二维码。'
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
  '401':
  description: '未授权 (Unauthorized)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '错误信息，表示用户未授权执行请求的操作。'
            example: 未授权 (Unauthorized)
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/auth/2fa/validate:
  post:
    summary: 验证OTP (Validate OTP)
    deprecated: false
    description: |
      此端点用于验证OTP令牌以进行支付。
    operationId: auth_otp_validate
    tags: 
      - 认证 (Authentication)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: Kubit-OTP
        in: header
        description: 'OTP令牌。'
        required: true
        example: OTP 123456
        schema:
          type: string
    responses:
      '200':
        description: "成功 (Ok)"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
      '401':
        description: '未授权 (Unauthorized)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误信息，表示用户未授权执行请求的操作。'
                  example: 未授权 (Unauthorized)
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/auth/keys/exchange:
  post:
    summary: 解密数据 (Decrypt Data)
    deprecated: false
    description: |
      此端点用于交换公钥以解密敏感数据。
    operationId: exchange_key
    tags: 
      - 认证 (Authentication)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              public_key:
                type: string
                description: '公钥。'
            required:
              - public_key
    responses:
      '200':
        description: '成功 (OK)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
                data:
                  type: string
                  description: 'AES 256密钥。'
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
      '401':
        description: '未授权 (Unauthorized)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误信息，表示用户未授权执行请求的操作。'
                  example: 未授权 (Unauthorized)
      '500':
        description: '服务器内部错误 (Internal Server Error)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'error'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 500
                message:
                  type: string
                  description: '错误信息，表示服务器内部发生故障。'
                  example: 服务器内部错误 (Internal Server Error)
    security: []

/api/v1/partners:
  post:
    summary: 创建客户 (Create a Client)
    deprecated: false
    description: |
      此端点用于创建一个客户。
    operationId: partners
    tags: 
      - 客户 (Customers)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              rfc:
                type: string
                description: 'RFC。法人必须为12个字符，自然人必须为13个字符。'
                example: 'XAXX010101000'
              company_name:
                type: string
                format: string
                description: '公司名称'
                example: 'MI EMPRESA S.A. DE C.V.'
              economic_activity:
                type: string
                format: string
                description: '经济活动'
                example: '金融行业'
              business_activity:
                type: string
                format: string
                description: '业务类型'
                example: '提供金融服务'
              taxpayer_type_id:
                type: integer
                format: integer
                description: '纳税人类型'
                example: '1 自然人, 2 法人'
              company_address:
                type: object
                description: '公司地址'
                properties:
                  street:
                    type: string
                    format: string
                    description: '街道'
                  num_ext:
                    type: string
                    format: string
                    description: '外部号码'
                  num_int:
                    type: string
                    format: string
                    description: '内部号码'
                  reference:
                    type: string
                    format: string
                    description: '到达位置的参考信息'
                  neighborhood:
                    type: string
                    format: string
                    description: '社区'
                  district:
                    type: string
                    format: string
                    description: '区/市'
                  estate:
                    type: string
                    format: string
                    description: '州/联邦实体'
                    example: ''
                  cp:
                    type: string
                    format: string
                    description: '邮政编码'
                required:
                  - street
                  - num_ext
                  - neighborhood
                  - district
                  - estate
                  - cp
              contact_name:
                type: string
                format: string
                description: '联系人姓名'
              contact_email:
                type: string
                format: string
                description: '联系人电子邮件'
              contact_tel:
                type: string
                format: string
                description: '联系人电话'
              company_tel:
                type: string
                format: string
                description: '公司电话'
required:
  - rfc   (墨西哥纳税人登记号)
  - company_name  # 公司名称
  - economic_activity  # 经济活动
  - business_activity  # 业务类型
  - taxpayer_type_id  # 纳税人类型
  - company_address  # 公司地址
  - contact_name  # 联系人姓名
  - contact_email  # 联系人电子邮件
  - contact_tel  # 联系人电话
   responses:
  '201':
    description: '已创建 (Created)'
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              description: '请求的状态。'
              example: "ok"
            code:
              type: integer
              description: '与响应对应的HTTP状态码。'
              example: 201
  '400':
    description: '请求错误 (Bad Request)'
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              description: '请求的状态。'
              examples: 'fail'
            code:
              type: integer
              description: '与响应对应的HTTP状态码。'
              example: 400
            message:
              type: string
              description: '错误信息，表示请求不正确。'
              example: 请求错误 (Bad Request)
  '401':
    description: '未授权 (Unauthorized)'
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              description: '请求的状态。'
              examples: 'fail'
            code:
              type: integer
              description: '与响应对应的HTTP状态码。'
              example: 401
            message:
              type: string
              description: '错误信息，表示用户未授权执行请求的操作。'
              example: 未授权 (Unauthorized)
  '422':
    description: 无法处理的实体 (Unprocessable Entity)
      <table>
        <tr>
          <th>代码</th>
          <th>描述</th>
        </tr>
        <tr>
          <td>CODE-014</td>
          <td>邮箱已注册</td>
        </tr>
      </table>
    content: 
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              description: '请求的状态。'
              examples: 'fail'
            code:
              type: integer
              description: '与响应对应的HTTP状态码。'
              example: 422
            message:
              type: string
              description: '识别出的错误代码。'
              example: CODE-001
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/partners/paged:
  get:
    summary: 获取客户列表 (Get Clients)
    deprecated: false
    description: |
      此端点用于获取所有客户。
    operationId: partners_paged
    tags: 
      - 客户 (Customers)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: offset
        in: query
        description: '设置从查询结果中返回的第一条记录的位置。默认值为0，表示从第一条结果开始。'
        required: true
        example: paged?offset=1
        schema:
          type: string
      - name: limit
        in: query
        description: '指示每页返回的记录数。'
        required: true
        example: paged?limit=20
        schema:
          type: string
      - name: filter
        in: query
        description: '用作搜索过滤的文本。'
        required: true
        schema:
          type: string
    responses:                  
      '200':
        description: "成功 (Ok)"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
                total:
                  type: integer
                  description: '找到的记录总数。'
                  example: 2
                data:
                  type: array
                  description: '包含结果数据的对象。'
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: string
                        description: '唯一标识符。'
                      rfc:
                        type: string
                        format: string
                        description: 'RFC。'
                      company_name:
                        type: string
                        format: string
                        description: '公司名称。'
                      economic_activity:
                        type: string
                        format: string
                        description: '经济活动。'
                      business_activity:
                        type: string
                        format: string
                        description: '业务类型。'
                      taxpayer_type_id:
                        type: integer
                        format: integer
                        description: '纳税人类型。'
                      company_address:
                        type: object
                        description: '公司地址。'
                        properties:
                          street:
                            type: string
                            format: string
                            description: '街道。'
                          num_ext:
                            type: string
                            format: string
                            description: '外部号码。'
                          num_int:
                            type: string
                            format: string
                            description: '内部号码。'
                          reference:
                            type: string
                            format: string
                            description: '到达位置的参考信息。'
                          neighborhood:
                            type: string
                            format: string
                            description: '社区。'
                          district:
                            type: string
                            format: string
                            description: '区/市。'
                          estate:
                            type: string
                            format: string
                            description: '州/联邦实体。'
                          cp:
                            type: string
                            format: string
                            description: '邮政编码。'
                      contact_name:
                        type: string
                        format: string
                        description: '联系人姓名。'
                      contact_email:
                        type: string
                        format: string
                        description: '联系人电子邮件。'
                      contact_tel:
                        type: string
                        format: string
                        description: '联系人电话。'
                      company_tel:
                        type: string
                        format: string
                        description: '公司电话。'
                      status:
                        type: integer
                        format: integer
                        description: '客户记录的状态。'
                        example: "1 已创建, 2 审核中, 3 已批准, 4 已拒绝"
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
'401':
  description: '未授权 (Unauthorized)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '错误信息，表示用户未授权执行请求的操作。'
            example: 未授权 (Unauthorized)
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/partners/{partnerId}:
  get:
    summary: 通过ID获取客户 (Get Client by ID)
    deprecated: false
    description: |
      此端点用于通过唯一标识符获取客户。
    operationId: partners_id
    tags: 
      - 客户 (Customers)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: partnerId
        in: path
        description: '客户的唯一标识符。'
        required: true
        example: /partners/12345
        schema:
          type: string
    responses:
      '200':
        description: "成功 (Ok)"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
                data:
                  type: object
                  description: '包含结果数据的对象。'
                  properties:
                    id:
                      type: string
                      format: string
                      description: '唯一标识符。'
                    rfc:
                      type: string
                      format: string
                      description: 'RFC。'
                    company_name:
                      type: string
                      format: string
                      description: '公司名称。'
                    economic_activity:
                      type: string
                      format: string
                      description: '经济活动。'
                    business_activity:
                      type: string
                      format: string
                      description: '业务类型。'
                    taxpayer_type_id:
                      type: integer
                      format: integer
                      description: '纳税人类型。'
                    company_address:
                      type: object
                      description: '公司地址。'
                      properties:
                        street:
                          type: string
                          format: string
                          description: '街道。'
                        num_ext:
                          type: string
                          format: string
                          description: '外部号码。'
                        num_int:
                          type: string
                          format: string
                          description: '内部号码。'
                        reference:
                          type: string
                          format: string
                          description: '到达位置的参考信息。'
                        neighborhood:
                          type: string
                          format: string
                          description: '社区。'
                        district:
                          type: string
                          format: string
                          description: '区/市。'
                        estate:
                          type: string
                          format: string
                          description: '州/联邦实体。'
                        cp:
                          type: string
                          format: string
                          description: '邮政编码。'
                    contact_name:
                      type: string
                      format: string
                      description: '联系人姓名。'
                    contact_email:
                      type: string
                      format: string
                      description: '联系人电子邮件。'
                    contact_tel:
                      type: string
                      format: string
                      description: '联系人电话。'
                    company_tel:
                      type: string
                      format: string
                      description: '公司电话。'
                    status:
                      type: integer
                      format: integer
                      description: '客户记录的状态。'
                      example: "1 已创建, 2 审核中, 3 已批准, 4 已拒绝"
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
      '401':
        description: '未授权 (Unauthorized)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误信息，表示用户未授权执行请求的操作。'
                  example: 未授权 (Unauthorized)
      '500':
        description: '服务器内部错误 (Internal Server Error)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'error'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 500
                message:
                  type: string
                  description: '错误信息，表示服务器内部发生故障。'
                  example: 服务器内部错误 (Internal Server Error)
                  
    security: []
    
 /api/v1/partners/{partnerId}/status/{statusId}:
  put:
    summary: 更新客户状态 (Update Client Status)
    deprecated: false
    description: 此端点用于更新客户的状态。
    operationId: partner_status_update
    tags: 
      - 客户 (Customers)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: partnerId
        in: path
        description: '客户的唯一标识符。'
        required: true
        example: /partners/12345
        schema:
          type: string
      - name: statusId
        in: path
        description: '状态的标识符。'
        required: true
        example: /status/1
        schema:
          type: integer
    responses:
      '200':
        description: '成功 (OK)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
      '401':
        description: '未授权 (Unauthorized)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: "fail"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误信息，表示用户未授权执行请求的操作。'
                  example: 未授权 (Unauthorized)
        '422':
          description: Unprocessable Entity
            <table>
              <tr>
                <th>Código</th>
                <th>描述</th>
              </tr>
              <tr>
                <td>CODE-011</td>
                <td>未找到客戶</td>
              </tr>
              <tr>
                <td>CODE-012</td>
                <td>無效的狀態更改。無法從狀態 A 直接跳到 C，而不經過 B.</td>
              </tr>
              <tr>
                <td>CODE-013</td>
                <td>狀態更改已成功處理，但無法創建客戶的用戶帳戶。</td>
              </tr>
              <tr>
                <td>CODE-015</td>
                <td>狀態更改已成功處理，但無法創建客戶的 API 金鑰。</td>
              </tr>
            </table>
content: 
  application/json:
    schema:
      type: object
      properties:
        status:
          type: string
          description: '请求的状态。'
          examples: "fail"
        code:
          type: integer
          description: '与响应对应的HTTP状态码。'
          example: 422
        message:
          type: string
          description: '识别出的错误代码。'
          example: CODE-005
'500':
  description: "服务器内部错误 (Internal Server Error)"
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: "请求的状态。"
            examples: "error"
          code:
            type: integer
            description: "与响应对应的HTTP状态码。"
            example: 500
          message:
            type: string
            description: "错误信息，表示服务器内部发生故障。"
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/customers:
  post:
    summary: 创建合作客户 (Create a Collaborator Client)
    deprecated: false
    description: |
      此端点用于创建一个合作客户。
    operationId: customers
    tags: 
      - 客户 (Customers)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。请在请求头中提供此密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              rfc:
                type: string
                description: 'RFC。法人必须为12个字符，自然人必须为13个字符。'
                example: 'XAXX010101000'
              company_name:
                type: string
                format: string
                description: '公司名称。'
                example: 'MI EMPRESA S.A. DE C.V.'
              name:
                type: string
                format: string
                description: '姓名。如果是自然人，则必须填写此字段。'
                example: 'Ernesto Miguel'
              ap_paterno:
                type: string
                format: string
                description: '父姓。如果是自然人，则必须填写此字段。'
                example: 'Aguirre'
              ap_materno:
                type: string
                format: string
                description: '母姓。如果是自然人，则必须填写此字段。'
                example: 'Lopez'
              taxpayer_type_id:
                type: integer
                format: integer
                description: '纳税人类型'
                example: '1 自然人, 2 法人'
              address:
                description: '公司地址'
                type: object
                properties:
                  street:
                    type: string
                    format: string
                    description: '街道。'
                  num_ext:
                    type: string
                    format: string
                    description: '外部号码。'
                  num_int:
                    type: string
                    format: string
                    description: '内部号码。'
                  reference:
                    type: string
                    format: string
                    description: '到达位置的参考信息。'
                    example: '距离公园一个街区...'
                  neighborhood:
                    type: string
                    format: string
                    description: '社区。'
                  district:
                    type: string
                    format: string
                    description: '区/市'
                  estate:
                    type: string
                    format: string
                    description: '州/联邦实体。'
                  cp:
                    type: string
                    format: string
                    description: '邮政编码。'
                    example: '12345'
                required:
                  - street
                  - num_ext
                  - neighborhood
                  - district
                  - estate
                  - cp
              contact_name:
                type: string
                format: string
                description: '联系人姓名。'
              contact_email:
                type: string
                format: string
                description: '联系人电子邮件。'
              contact_tel:
                type: string
                format: string
                description: '联系人电话。'
            required:
              - rfc
              - taxpayer_type_id
              - address
              - contact_name
              - contact_email
              - contact_tel
    responses:
'201':
  description: '已创建 (Created)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            example: "ok"
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 201
          data:
            type: object
            description: '包含结果数据的对象。'
            properties:
              customer_id:
                type: string
                format: string
                description: '客户的唯一标识符。'
            required:
              - customer_id
'400':
  description: '请求错误 (Bad Request)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 400
          message:
            type: string
            description: '错误信息，表示请求不正确。'
            example: 请求错误 (Bad Request)
'401':
  description: '未授权 (Unauthorized)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '错误信息，表示用户未授权执行请求的操作。'
            example: 未授权 (Unauthorized)
        '422':
          description: Unprocessable Entity
            <table>
              <tr>
                <th>Código</th>
                <th>描述</th>
              </tr>
              <tr>
                <td>CODE-013</td>
                <td>無法創建客戶的用戶帳戶。</td>
              </tr>
              <tr>
                <td>CODE-014</td>
                <td>已註冊的電子郵件帳戶。</td>
              </tr>
            </table>
 content: 
  application/json:
    schema:
      type: object
      properties:
        status:
          type: string
          description: '请求的状态。'
          examples: 'fail'
        code:
          type: integer
          description: '与响应对应的HTTP状态码。'
          example: 422
        message:
          type: string
          description: '识别出的错误代码。'
          example: CODE-001
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/customers/paged:
  get:
    summary: 获取合作客户列表 (Get Collaborator Clients)
    deprecated: false
    description: |
      此端点用于获取所有合作客户。
    operationId: customers_paged
    tags: 
      - 客户 (Customers)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: partnerCustomerId
        in: query
        description: '客户的唯一标识符。'
        required: true
        example: paged?partnerCustomerId=12345
        schema:
          type: string
      - name: offset
        in: query
        description: '设置从查询结果中返回的第一条记录的位置。默认值为0，表示从第一条结果开始。'
        required: true
        example: paged?offset=1
        schema:
          type: string
      - name: limit
        in: query
        description: '指示每页返回的记录数。'
        required: true
        example: paged?limit=20
        schema:
          type: string
      - name: filter
        in: query
        description: '用作搜索过滤的文本。'
        required: true
        example: 要搜索的文本...
        schema:
          type: string
    responses:
      '200':
        description: "成功 (Ok)"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
                total:
                  type: integer
                  description: '找到的记录总数。'
                  example: 2
                data:
                  type: array
                  description: '包含结果数据的对象。'
                  items:
                    type: object
                    properties:
                      rfc:
                        type: string
                        format: string
                        description: 'RFC。'
                      parent_id:
                        type: string
                        format: string
                        description: '父记录的标识符。'
                      account_customer_id:
                        type: string
                        format: string
                        description: '所属客户的唯一标识符。'
                      level:
                        type: integer
                        format: integer
                        description: '客户在层次结构中的级别，表示其是否属于其他合作客户。'
                      company_name:
                        type: string
                        format: string
                        description: '公司名称。'
                      name:
                        type: string
                        format: string
                        description: '姓名。仅适用于自然人。'
                      ap_paterno:
                        type: string
                        format: string
                        description: '父姓。仅适用于自然人。'
                      ap_materno:
                        type: string
                        format: string
                        description: '母姓。仅适用于自然人。'
                      taxpayer_type_id:
                        type: integer
                        format: integer
                        description: '纳税人类型'
                        example: '1 自然人, 2 法人'
                      address:
                        description: '公司地址。'
                        type: object
                        properties:
                          street:
                            type: string
                            format: string
                            description: '街道。'
                          num_ext:
                            type: string
                            format: string
                            description: '外部号码。'
                          num_int:
                            type: string
                            format: string
                            description: '内部号码。'
                          reference:
                            type: string
                            format: string
                            description: '到达位置的参考信息。'
                          neighborhood:
                            type: string
                            format: string
                            description: '社区。'
                          district:
                            type: string
                            format: string
                            description: '区/市。'
                          estate:
                            type: string
                            format: string
                            description: '州/联邦实体。'
                          cp:
                            type: string
                            format: string
                            description: '邮政编码。'
                      contact_name:
                        type: string
                        format: string
                        description: '联系人姓名。'
                      contact_email:
                        type: string
                        format: string
                        description: '联系人电子邮件。'
                      contact_tel:
                        type: string
                        format: string
                        description: '联系人电话。'
                      creation_date:
                        type: string
                        format: string
                        description: '记录创建日期。'
'400':
  description: '请求错误 (Bad Request)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 400
          message:
            type: string
            description: '错误信息，表示请求不正确。'
            example: 请求错误 (Bad Request)
'401':
  description: '未授权 (Unauthorized)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '错误信息，表示用户未授权执行请求的操作。'
            example: 未授权 (Unauthorized)
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/customers/{customerId}:
  get:
    summary: 通过ID获取合作客户 (Get Collaborator Client by ID)
    deprecated: false
    description: |
      此端点用于通过ID获取合作客户。
    operationId: customers_id
    tags: 
      - 客户 (Customers)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: customerId
        in: path
        description: '合作客户的唯一标识符。'
        required: true
        example: customers/12345
        schema:
          type: string
    responses:
      '200':
        description: "成功 (Ok)"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
                data:
                  type: object
                  description: '包含结果数据的对象。'
                  properties:
                    rfc:
                      type: string
                      format: string
                      description: 'RFC。'
                    parent_id:
                      type: string
                      format: string
                      description: '父记录的标识符。'
                    account_customer_id:
                      type: string
                      format: string
                      description: '所属客户的唯一标识符。'
                    level:
                      type: integer
                      format: integer
                      description: '客户在层次结构中的级别，表示其是否属于其他合作客户。'
                    company_name:
                      type: string
                      format: string
                      description: '公司名称。'
                    name:
                      type: string
                      format: string
                      description: '姓名。仅适用于自然人。'
                    ap_paterno:
                      type: string
                      format: string
                      description: '父姓。仅适用于自然人。'
                    ap_materno:
                      type: string
                      format: string
                      description: '母姓。仅适用于自然人。'
                    taxpayer_type_id:
                      type: integer
                      format: integer
                      description: '纳税人类型'
                      example: '1 自然人, 2 法人'
                    address:
                      description: '公司地址。'
                      type: object
                      properties:
                        street:
                          type: string
                          format: string
                          description: '街道。'
                        num_ext:
                          type: string
                          format: string
                          description: '外部号码。'
                        num_int:
                          type: string
                          format: string
                          description: '内部号码。'
                        reference:
                          type: string
                          format: string
                          description: '到达位置的参考信息。'
                        neighborhood:
                          type: string
                          format: string
                          description: '社区。'
                        district:
                          type: string
                          format: string
                          description: '区/市。'
                        estate:
                          type: string
                          format: string
                          description: '州/联邦实体。'
                        cp:
                          type: string
                          format: string
                          description: '邮政编码。'
                    contact_name:
                      type: string
                      format: string
                      description: '联系人姓名。'
                    contact_email:
                      type: string
                      format: string
                      description: '联系人电子邮件。'
                    contact_tel:
                      type: string
                      format: string
                      description: '联系人电话。'
                    creation_date:
                      type: string
                      format: string
                      description: '记录创建日期。'
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
'401':
  description: '未授权 (Unauthorized)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '错误信息，表示用户未授权执行请求的操作。'
            example: 未授权 (Unauthorized)
'500':
  description: '服务器内部错误 (Internal Server Error)'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '错误信息，表示服务器内部发生故障。'
            example: 服务器内部错误 (Internal Server Error)
security: []

/api/v1/accounts:
  post:
    summary: 创建账户 (Create an Account)
    deprecated: false
    description: |
      此端点用于创建一个账户。
    operationId: accounts
    tags: 
      - 账户 (Accounts)
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: accountType
        in: query
        description: '要创建的账户类型。'
        required: true
        example: '1 账户, 2 子账户'
        schema:
          type: string
      - name: customerId
        in: query
        description: '客户的唯一标识符。'
        required: true
        schema:
          type: string
    responses:
      '201':
        description: '已创建 (Created)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 201
      '400':
        description: '请求错误 (Bad Request)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误信息，表示请求不正确。'
                  example: 请求错误 (Bad Request)
      '401':
        description: '未授权 (Unauthorized)'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误信息，表示用户未授权执行请求的操作。'
                  example: 未授权 (Unauthorized)
      '422':
        description: 无法处理的实体 (Unprocessable Entity)
          <table>
            <tr>
              <th>代码</th>
              <th>描述</th>
            </tr>
            <tr>
              <td>CODE-004</td>
              <td>客户状态未批准</td>
            </tr>
            <tr>
              <td>CODE-005</td>
              <td>未找到所有者</td>
            </tr>
            <tr>
              <td>CODE-006</td>
              <td>成本中心未分配或不可用</td>
            </tr>
            <tr>
              <td>CODE-007</td>
              <td>未找到支付提供商</td>
            </tr>
            <tr>
              <td>CODE-009</td>
              <td>账户级别无效</td>
            </tr>
          </table>
        content: 
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求的状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 422
                message:
                  type: string
                  description: '识别出的错误代码。'
                  example: CODE-001
'500':
  description: '服务器内部错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 500
          message:
            type: string
            description: '错误消息，指示服务器内部错误。'
            example: 服务器内部错误
  security: []

/api/v1/accounts/{accountId}:
  get:
    summary: 通过 ID 获取账户信息
    deprecated: false
    description: |
      该端点允许通过账户 ID 获取账户数据。
    operationId: accounts_id
    tags: 
      - 账户
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: accountId
        in: path
        description: '账户的唯一标识符（账户号码）。'
        required: true
        example: accounts/12345
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 200
                data:
                  type: object
                  description: '包含结果数据的对象。'
                  properties:
                    id:
                      type: string
                      format: string
                      description: '账户的唯一标识符（账户号码）。'
                    type:
                      type: integer
                      format: integer
                      description: '账户类型。'
                      example: '1 主账户, 2 子账户'
                    amount:
                      type: money
                      format: money
                      description: '可用余额。'
                    currency:
                      type: string
                      format: string
                      description: '货币类型。'
                    linked_cellphone:
                      type: string
                      format: string
                      description: '绑定的手机号码。'
                    creation_date:
                      type: string
                      format: string
                      description: '账户创建日期。'
                    clabes:
                      type: array
                      items:
                        type: object
                        description: '与主账户关联的 CLABE 账户。每个支付服务提供商可能有一个 CLABE 账户。'
                        properties:
                          id: 
                            type: string
                            format: string
                            description: 'CLABE 账户的唯一标识符。'
                          payment_provider_id: 
                            type: string
                            format: string
                            description: '支付服务提供商的唯一标识符。'
                          account_id: 
                            type: string
                            format: string
                            description: '关联账户的唯一标识符。'
                          clabe: 
                            type: string
                            format: string
                            description: 'CLABE 账户号码。'
      '400':
        description: '请求错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: 请求错误
'401':
  description: '未授权'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 401
          message:
            type: string
            description: '错误消息，指示用户无权执行请求的操作。'
            example: 未授权
'500':
  description: '服务器内部错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 500
          message:
            type: string
            description: '错误消息，指示服务器内部错误。'
            example: 服务器内部错误
  security: []

/api/v1/accounts/clabes/{clabe}:
  get:
    summary: 通过 CLABE 获取账户信息
    deprecated: false
    description: |
      该端点允许通过 CLABE 账户号码获取账户数据。
    operationId: accounts_clabe
    tags: 
      - 账户
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: clabe
        in: path
        description: 'CLABE 账户号码'
        required: true
        example: clabes/1234567890123456
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 200
                data:
                  type: object
                  description: '包含结果数据的对象。'
                  properties:
                    id:
                      type: string
                      format: string
                      description: '账户的唯一标识符（账户号码）。'
                    type:
                      type: integer
                      format: integer
                      description: '账户类型。'
                      example: '1 主账户, 2 子账户'
                    amount:
                      type: money
                      format: money
                      description: '可用余额。'
                    currency:
                      type: string
                      format: string
                      description: '货币类型。'
                    linked_cellphone:
                      type: string
                      format: string
                      description: '绑定的手机号码。'
                    creation_date:
                      type: string
                      format: string
                      description: '账户创建日期。'
                    clabes:
                      type: array
                      items:
                        type: object
                        description: '与主账户关联的 CLABE 账户。每个支付服务提供商可能有一个 CLABE 账户。'
                        properties:
                          id: 
                            type: string
                            format: string
                            description: 'CLABE 账户的唯一标识符。'
                          payment_provider_id: 
                            type: string
                            format: string
                            description: '支付服务提供商的唯一标识符。'
                          account_id: 
                            type: string
                            format: string
                            description: '关联账户的唯一标识符。'
                          clabe: 
                            type: string
                            format: string
                            description: 'CLABE 账户号码。'
'400':
  description: '请求错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 400
          message:
            type: string
            description: '错误消息，指示请求格式不正确。'
            example: 请求错误
'401':
  description: '未授权'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 401
          message:
            type: string
            description: '错误消息，指示用户无权执行请求的操作。'
            example: 未授权
'500':
  description: '服务器内部错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 500
          message:
            type: string
            description: '错误消息，指示服务器内部错误。'
            example: 服务器内部错误
  security: []

/api/v1/accounts/customers/{customerId}:
  get:
    summary: 通过客户 ID 获取账户信息
    deprecated: false
    description: |
      该端点允许通过客户 ID 获取客户的账户数据。
    operationId: accounts_customerId
    tags: 
      - 账户
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: customerId
        in: path
        description: '客户的唯一标识符'
        required: true
        example: customers/12345
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 200
                data:
                  type: array
                  description: '包含结果数据的对象。'
                  items:
                    properties:
                      id:
                        type: string
                        format: string
                        description: '账户的唯一标识符（账户号码）。'
                      type:
                        type: integer
                        format: integer
                        description: '账户类型。'
                        example: '1 主账户, 2 子账户'
                      amount:
                        type: money
                        format: money
                        description: '可用余额。'
                      currency:
                        type: string
                        format: string
                        description: '货币类型。'
                      linked_cellphone:
                        type: string
                        format: string
                        description: '绑定的手机号码。'
                      creation_date:
                        type: string
                        format: string
                        description: '账户创建日期。'
                      clabes:
                        type: array
                        items:
                          type: object
                          description: '与主账户关联的 CLABE 账户。每个支付服务提供商可能有一个 CLABE 账户。'
                          properties:
                            id: 
                              type: string
                              format: string
                              description: 'CLABE 账户的唯一标识符。'
                            payment_provider_id: 
                              type: string
                              format: string
                              description: '支付服务提供商的唯一标识符。'
                            account_id: 
                              type: string
                              format: string
                              description: '关联账户的唯一标识符。'
                            clabe: 
                              type: string
                              format: string
                              description: 'CLABE 账户号码。'
      '400':
        description: '请求错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: 请求错误
      '401':
        description: '未授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误消息，指示用户无权执行请求的操作。'
                  example: 未授权
'500':
  description: '服务器内部错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 500
          message:
            type: string
            description: '错误消息，指示服务器内部错误。'
            example: 服务器内部错误
  security: []

/api/v1/accounts/movements/{movementId}:
  get:
    summary: 通过 ID 获取账户交易记录
    deprecated: false
    description: |
      该端点允许通过唯一标识符获取账户的交易记录。
    operationId: accounts_movements_movementId
    tags: 
      - 账户
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: movementId
        in: path
        description: '交易记录的唯一标识符'
        required: true
        example: movements/12345
        schema:
          type: string
    responses:
      '200':
        description: "成功"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 200
                data:
                  type: object
                  description: '包含结果数据的对象。'
                  properties:
                    id:
                      type: string
                      format: string
                      description: '交易记录的唯一标识符。'
                    account_id:
                      type: string
                      format: string
                      description: '账户的唯一标识符（账户号码）。'
                    type:
                      type: integer
                      format: integer
                      description: '交易类型。'
                      example: '1 Spei 转出, 2 Spei 转入, 3 转账'
                    description:
                      type: string
                      format: string
                      description: '交易描述。'
                    amount:
                      type: money
                      format: money
                      description: '交易金额。'
                    folio:
                      type: string
                      format: string
                      description: '交易编号。'
                    status:
                      type: string
                      format: string
                      description: '交易状态。'
                    operation_date:
                      type: string
                      format: string
                      description: '交易操作日期。'
                    application_date:
                      type: string
                      format: string
                      description: '交易生效日期。（Spei）'
                    origin_bank_id:
                      type: string
                      format: string
                      description: '发起银行的代码。（Spei）'
                    payer_name:
                      type: string
                      format: string
                      description: '付款人姓名。（Spei）'
                    payer_account:
                      type: string
                      format: string
                      description: '付款人账户号码。（Spei）'
                    destination_bank_id:
                      type: string
                      format: string
                      description: '收款银行的代码。（Spei）'
                    beneficiary_name:
                      type: string
                      format: string
                      description: '收款人姓名。（Spei）'
                    beneficiary_account:
                      type: string
                      format: string
                      description: '收款人账户号码。（Spei）'
                    payment_purpose:
                      type: string
                      format: string
                      description: '付款用途。（Spei）'
                    reference:
                      type: integer
                      format: integer
                      description: '参考编号。（Spei）'
                    tracking_key:
                      type: string
                      format: string
                      description: '跟踪密钥。（Spei）'
      '400':
        description: '请求错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: 请求错误
      '401':
        description: '未授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误消息，指示用户无权执行请求的操作。'
                  example: 未授权
      '500':
        description: '服务器内部错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'error'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 500
                message:
                  type: string
                  description: '错误消息，指示服务器内部错误。'
                  example: 服务器内部错误
  security: []
  
/api/v1/accounts/{accountId}/movements/paged:
  get:
    summary: 获取分页的交易记录
    deprecated: false
    description: |
      该端点允许获取账户的所有交易记录，并支持分页。
    operationId: accounts_movements_paged
    tags: 
      - 账户
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: accountId
        in: path
        description: '账户的唯一标识符（账户号码）。'
        required: true
        example: accounts/12345/movements
        schema:
          type: string
      - name: offset
        in: query
        description: '设置从查询结果中返回的第一条记录的位置。该值必须大于 0。'
        required: true
        example: paged?offset=1
        schema:
          type: string
      - name: limit
        in: query
        description: '指定每页返回的记录数。'
        required: true
        example: paged?limit=20
        schema:
          type: string
      - name: type
        in: query
        description: '交易类型。'
        required: false
        example: paged?type=1
        schema:
          type: integer
      - name: status
        in: query
        description: '交易状态。'
        required: false
        example: paged?status=scattered
        schema:
          type: string
      - name: startDate
        in: query
        description: '交易操作的起始日期。'
        required: false
        example: paged?startDate=11/12/2024
        schema:
          type: string
      - name: endDate
        in: query
        description: '交易操作的结束日期。'
        required: false
        example: paged?endDate=11/12/2024
        schema:
          type: string
    responses:
      '200':
        description: '成功'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 200
                total:
                  type: integer
                  description: '找到的记录总数。'
                  example: 2
                data:
                  type: array
                  description: '包含结果数据的对象。'
                  items:
                    properties:
                      id:
                        type: string
                        format: string
                        description: '交易记录的唯一标识符。'
                      account_id:
                        type: string
                        format: string
                        description: '账户的唯一标识符（账户号码）。'
                      type:
                        type: integer
                        format: integer
                        description: '交易类型。'
                        example: '1 Spei 转出, 2 Spei 转入, 3 转账'
                      description:
                        type: string
                        format: string
                        description: '交易描述。'
                      amount:
                        type: money
                        format: money
                        description: '交易金额。'
                      folio:
                        type: string
                        format: string
                        description: '交易编号。'
                      status:
                        type: string
                        format: string
                        description: '交易状态。'
                      operation_date:
                        type: string
                        format: string
                        description: '交易操作日期。'
                      application_date:
                        type: string
                        format: string
                        description: '交易生效日期。（Spei）'
                      origin_bank_id:
                        type: string
                        format: string
                        description: '发起银行的代码。（Spei）'
                      payer_name:
                        type: string
                        format: string
                        description: '付款人姓名。（Spei）'
                      payer_account:
                        type: string
                        format: string
                        description: '付款人账户号码。（Spei）'
                      destination_bank_id:
                        type: string
                        format: string
                        description: '收款银行的代码。（Spei）'
                      beneficiary_name:
                        type: string
                        format: string
                        description: '收款人姓名。（Spei）'
                      beneficiary_account:
                        type: string
                        format: string
                        description: '收款人账户号码。（Spei）'
                      payment_purpose:
                        type: string
                        format: string
                        description: '付款用途描述。（Spei）'
                      reference:
                        type: integer
                        format: integer
                        description: '参考编号。（Spei）'
                      tracking_key:
                        type: string
                        format: string
                        description: '交易跟踪密钥。（Spei）'
'400':
  description: '请求错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 400
          message:
            type: string
            description: '错误消息，指示请求格式不正确。'
            example: 请求错误
'401':
  description: '未授权'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 401
          message:
            type: string
            description: '错误消息，指示用户无权执行请求的操作。'
            example: 未授权
'500':
  description: '服务器内部错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的 HTTP 状态码。'
            example: 500
          message:
            type: string
            description: '错误消息，指示服务器内部错误。'
            example: 服务器内部错误
  security: []

/api/v1/accounts/{accountId}/movements/latest:
  get:
    summary: 获取最近的交易记录
    deprecated: false
    description: |
      该端点允许获取账户的最近 5 条交易记录。
    operationId: accounts_movements_latest
    tags: 
      - 账户
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: accountId
        in: path
        description: '账户的唯一标识符（账户号码）。'
        required: true
        example: accounts/12345/movements
        schema:
          type: string
    responses:
      '200':
        description: '成功'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 200
                total:
                  type: integer
                  description: '找到的记录总数。'
                  example: 1
                data:
                  type: array
                  description: '包含结果数据的对象。'
                  items:
                    properties:
                      id:
                        type: string
                        format: string
                        description: '交易记录的唯一标识符。'
                      account_id:
                        type: string
                        format: string
                        description: '账户的唯一标识符（账户号码）。'
                      type:
                        type: integer
                        format: integer
                        description: '交易类型。'
                        example: '1 Spei 转出, 2 Spei 转入, 3 转账'
                      description:
                        type: string
                        format: string
                        description: '交易描述。'
                      amount:
                        type: money
                        format: money
                        description: '交易金额。'
                      folio:
                        type: string
                        format: string
                        description: '交易编号。'
                      status:
                        type: string
                        format: string
                        description: '交易状态。'
                      operation_date:
                        type: string
                        format: string
                        description: '交易操作日期。'
                      application_date:
                        type: string
                        format: string
                        description: '交易生效日期。（Spei）'
                      origin_bank_id:
                        type: string
                        format: string
                        description: '发起银行的代码。（Spei）'
                      payer_name:
                        type: string
                        format: string
                        description: '付款人姓名。（Spei）'
                      payer_account:
                        type: string
                        format: string
                        description: '付款人账户号码。（Spei）'
                      destination_bank_id:
                        type: string
                        format: string
                        description: '收款银行的代码。（Spei）'
                      beneficiary_name:
                        type: string
                        format: string
                        description: '收款人姓名。（Spei）'
                      beneficiary_account:
                        type: string
                        format: string
                        description: '收款人账户号码。（Spei）'
                      payment_purpose:
                        type: string
                        format: string
                        description: '付款用途描述。（Spei）'
                      reference:
                        type: integer
                        format: integer
                        description: '参考编号。（Spei）'
                      tracking_key:
                        type: string
                        format: string
                        description: '交易跟踪密钥。（Spei）'
      '400':
        description: '请求错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 400
                message:
                  type: string
                  description: '错误消息，指示请求格式不正确。'
                  example: 请求错误
      '401':
        description: '未授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的 HTTP 状态码。'
                  example: 401
                message:
                  type: string
                  description: '错误消息，指示用户无权执行请求的操作。'
                  example: 未授权
'500':
  description: '内部服务器错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '指示服务器内部错误的错误消息。'
            example: Internal Server Error
security: []

/api/v1/accounts/movements/status:
  get:
    summary: 获取移动状态
    deprecated: false
    description: |
      此端点用于获取移动可能具有的状态。
    operationId: movements_status
    tags: 
      - Accounts
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
    responses:
      '200':
        description: 'OK'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  example: "ok"
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 200
                data:
                  type: array
                  description: '包含结果数据的对象。'
                  items:
                    properties:
                        id:
                          type: string
                          format: string
                          description: '移动状态的唯一标识符。'
                        name:
                          type: string
                          format: string
                          description: '移动状态的名称。'
                        type:
                          type: integer
                          format: integer
                          description: '移动状态的类型（1 支付，2 卡片）。'
                    required:
                      - id
                      - name
                      - type
      '400':
        description: '错误的请求'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 400
                message:
                  type: string
                  description: '指示请求错误的错误消息。'
                  example: Bad Request
      '401':
        description: '未授权'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'fail'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 401
                message:
                  type: string
                  description: '指示未授权执行请求操作的错误消息。'
                  example: Unauthorized
      '500':
        description: '内部服务器错误'
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: '请求状态。'
                  examples: 'error'
                code:
                  type: integer
                  description: '与响应对应的HTTP状态码。'
                  example: 500
                message:
                  type: string
                  description: '指示服务器内部错误的错误消息。'
                  example: Internal Server Error
    security: []
    
/api/v1/accounts/movements/types:
    get:
      summary: 获取移动类型
      deprecated: false
      description: |
        此端点用于获取移动可能具有的类型。
      operationId: movements_types
      tags: 
        - Accounts
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: '用于验证请求的唯一密钥。'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: '用于验证请求的令牌。'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
          schema:
            type: string
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    example: "ok"
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 200
                  data:
                    type: array
                    description: '包含结果数据的对象。'
                    items:
                      properties:
                        id:
                          type: string
                          format: string
                          description: '移动类型的唯一标识符。'
                        name:
                          type: string
                          format: string
                          description: '移动类型的名称。'
                        type:
                          type: integer
                          format: integer
                          description: '移动类型的类型（1 支付，2 卡片）。'
                      required:
                        - id
                        - name
                        - type
        '400':
          description: '错误的请求'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    examples: 'fail'
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 400
                  message:
                    type: string
                    description: '指示请求错误的错误消息。'
                    example: Bad Request
        '401':
          description: '未授权'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    examples: 'fail'
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 401
                  message:
                    type: string
                    description: '指示未授权执行请求操作的错误消息。'
                    example: Unauthorized
        '500':
          description: '内部服务器错误'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    examples: 'error'
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 500
                  message:
                    type: string
                    description: '指示服务器内部错误的错误消息。'
                    example: Internal Server Error
      security: []
      
/api/v1/accounts/customers/{customerId}/favorites:
    get:
      summary: 获取常用账户
      deprecated: false
      description: |
        此端点用于获取客户保存为常用的账户。
      operationId: accounts_customerId_favorites
      tags: 
        - Accounts
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: '用于验证请求的唯一密钥。'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: '用于验证请求的令牌。'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
          schema:
            type: string
        - name: customerId
          in: path
          description: '客户的唯一标识符。'
          required: true
          example: customers/12345
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    example: "ok"
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 200
                  data:
                    type: array
                    description: '包含结果数据的对象。'
                    items:
                      properties:
                          customer_id:
                            type: string
                            format: string
                            description: '客户的唯一标识符。'
                          account_id:
                            type: string
                            format: string
                            description: '账户号码。'
                          account_type:
                            type: integer
                            format: integer
                            description: '账户类型。'
                            example: '1 Clabe, 2 Cuenta'
                          account_alias:
                            type: string
                            format: string
                            description: '账户别名。'
                          beneficiary_name:
                              type: string
                              format: string
                              description: '受益人的姓名。'
                          beneficiary_email:
                            type: string
                            format: string
                            description: '受益人的电子邮件。'
        '400':
          description: '错误的请求'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    examples: 'fail'
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 400
                  message:
                    type: string
                    description: '指示请求错误的错误消息。'
                    example: Bad Request
        '401':
          description: '未授权'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    examples: 'fail'
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 401
                  message:
                    type: string
                    description: '指示未授权执行请求操作的错误消息。'
                    example: Unauthorized
        '500':
          description: '内部服务器错误'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    examples: 'error'
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。'
                    example: 500
                  message:
                    type: string
                    description: '指示服务器内部错误的错误消息。'
                    example: Internal Server Error
      security: []

/api/v1/spei:
    post:
      summary: 发送付款
      deprecated: false
      description: |
        此端点用于向其他银行发送付款。
      operationId: speiout
      tags: 
        - Payments
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: '用于验证请求的唯一密钥。'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: '用于验证请求的令牌。'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
          schema:
            type: string
        - name: Kubit-OTP
          in: header
          description: '用于确保请求安全的OTP令牌。'
          required: true
          example: OTP 123456
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                concept:
                  type: string
                  description: '付款原因'
                  example: Pago
                beneficiary_account:
                  type: string
                  format: string
                  description: '受益人的CLABE账户号码'
                  example: '1234567890123456'
                beneficiary_bank:
                  type: string
                  format: string
                  description: '受益人的银行代码（请参阅 /spei/banks 中的目录）'
                  example: '40002'
                beneficiary_name:
                  type: string
                  format: string
                  description: '受益人的姓名（不含特殊字符或重音符号）'
                  example: Juan Perez Hernandez
                beneficiary_uid:
                  type: string
                  format: string
                  description: '受益人的CURP或RFC'
                  example: XAXX010101000
                beneficiary_account_type:
                  type: integer
                  format: integer
                  description: '受益人的账户类型'
                  example: 40
                beneficiary_email:
                  type: string
                  format: string
                  description: '受益人的电子邮件地址'
                  example: 'cuenta@servidor.com'
                payer_account:
                  type: string
                  format: string
                  description: '付款人的CLABE账户号码'
                  example: '1234567890123456'
                amount:
                  type: money
                  format: money
                  description: '转账金额。SPEI支付订单的最大金额为：999,999,999,999.99'
                  example: 10.00
                numerical_reference:
                  type: integer
                  format: integer
                  description: '与付款关联的数字参考'
                  example: 123
                save_beneficiary_account:
                  type: boolean
                  format: boolean
                  description: '保存受益人的账户'
                  example: true
                alias_beneficiary_account:
                  type: string
                  format: string
                  description: '保存受益人账户的名称'
                  example: 'Mi beneficiario'
              required:
                - concept
                - beneficiary_account
                - beneficiary_bank
                - beneficiary_name
                - beneficiary_uid
                - beneficiary_account_type
                - payer_account
                - amount
                - numerical_reference
                - save_beneficiary_account
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: '请求的状态。'
                    example: "ok"
                  code:
                    type: integer
                    description: '与响应对应的HTTP状态码。
                    example: 200
  '400':
  description: '错误的请求'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 400
          message:
            type: string
            description: '指示请求错误的错误消息。'
            example: Bad Request
'401':
  description: '未授权'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '指示未授权执行请求操作的错误消息。'
            example: Unauthorized
'422':
  description: '无法处理的实体'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 422
          message:
            type: string
            description: '识别出的错误代码。'
            example: CODE-001
  <table>
    <tr>
      <th>代码</th>
      <th>描述</th>
    </tr>
    <tr>
      <td>CODE-001</td>
      <td>账户未找到</td>
    </tr>
    <tr>
      <td>CODE-002</td>
      <td>账户不属于付款人</td>
    </tr>
    <tr>
      <td>CODE-003</td>
      <td>资金不足</td>
    </tr>
    <tr>
      <td>CODE-016</td>
      <td>佣金配置错误</td>
    </tr>
    <tr>
      <td>CODE-017</td>
      <td>未找到佣金配置</td>
    </tr>
    <tr>
      <td>CODE-018</td>
      <td>佣金计算错误</td>
    </tr>
  </table>
'500':
  description: '内部服务器错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '指示服务器内部错误的错误消息。'
            example: Internal Server Error
security: []

/api/v1/spei/save:
  post:
    summary: 保存付款
    deprecated: false
    description: |
      此端点用于保存向其他银行的付款，以便稍后执行。
    operationId: speiout_save
    tags: 
      - Payments
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: Kubit-OTP
        in: header
        description: '用于确保请求安全的OTP令牌。'
        required: true
        example: OTP 123456
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              concept:
                type: string
                description: '付款原因'
                example: Pago
              beneficiary_account:
                type: string
                format: string
                description: '受益人的CLABE账户号码'
                example: '1234567890123456'
              beneficiary_bank:
                type: string
                format: string
                description: '受益人的银行代码（请参阅 /spei/banks 中的目录）'
                example: '40002'
              beneficiary_name:
                type: string
                format: string
                description: '受益人的姓名（不含特殊字符或重音符号）'
                example: Juan Perez Hernandez
              beneficiary_uid:
                type: string
                format: string
                description: '受益人的CURP或RFC'
                example: XAXX010101000
              beneficiary_account_type:
                type: integer
                format: integer
                description: '受益人的账户类型'
                example: 40
              beneficiary_email:
                type: string
                format: string
                description: '受益人的电子邮件地址'
                example: 'cuenta@servidor.com'
              payer_account:
                type: string
                format: string
                description: '付款人的CLABE账户号码'
                example: '1234567890123456'
              amount:
                type: money
                format: money
                description: '转账金额。SPEI支付订单的最大金额为：999,999,999,999.99'
                example: 10.00
              numerical_reference:
                type: integer
                format: integer
                description: '与付款关联的数字参考'
                example: 123
              save_beneficiary_account:
                type: boolean
                format: boolean
                description: '保存受益人的账户'
                example: true
              alias_beneficiary_account:
                type: string
                format: string
                description: '保存受益人账户的名称'
                example: 'Mi beneficiario'
            required:
              - concept
              - beneficiary_account
              - beneficiary_bank
              - beneficiary_name
              - beneficiary_uid
              - beneficiary_account_type
              - payer_account
              - amount
              - numerical_reference
              - save_beneficiary_account
    responses:
'200':
  description: 'OK'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            example: "ok"
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 200
'400':
  description: '错误的请求'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 400
          message:
            type: string
            description: '指示请求错误的错误消息。'
            example: Bad Request
'401':
  description: '未授权'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'fail'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 401
          message:
            type: string
            description: '指示未授权执行请求操作的错误消息。'
            example: Unauthorized
'500':
  description: '内部服务器错误'
  content:
    application/json:
      schema:
        type: object
        properties:
          status:
            type: string
            description: '请求的状态。'
            examples: 'error'
          code:
            type: integer
            description: '与响应对应的HTTP状态码。'
            example: 500
          message:
            type: string
            description: '指示服务器内部错误的错误消息。'
            example: Internal Server Error
security: []

/api/v1/spei/save/template:
  post:
    summary: 上传付款模板
    deprecated: false
    description: |
      此端点用于上传付款模板以批量处理付款。
    operationId: speiout_template
    tags: 
      - Payments
    parameters:
      - name: Kubit-Api-Key
        in: header
        description: '用于验证请求的唯一密钥。'
        required: true
        example: KU_ZB2bXjQMh...
        schema:
          type: string
      - name: Bearer Token
        in: header
        description: '用于验证请求的令牌。'
        required: true
        example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
        schema:
          type: string
      - name: Kubit-OTP
        in: header
        description: '用于确保请求安全的OTP令牌。'
        required: true
        example: OTP 123456
        schema:
          type: string
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              payerAccount:
                type: string
              template:
                type: string
                format: binary
    responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /spei/orders/saved/process:
    post:
      summary: Procesar pagos guardados
      deprecated: false
      description: |
        Este endpoint permite procesar los pagos a otros bancos que han sido guardados.
      operationId: speiout_process_saved
      tags: 
        - Payments
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
          schema:
            type: string
        - name: Kubit-OTP
          in: header
          description: 'Token OTP para asegurar la solicitud.'
          required: true
          example: OTP 123456
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_order_ids:
                  type: array
                  description: 'Conjunto de ids a procesar.'
                  items:
                    type: string
                    format: uuid
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /api/v1/spei/banks:
    get:
      summary: Obtener bancos
      deprecated: false
      description: |
        Este endpoint permite obtener todos los bancos para realizar un pago.
      operationId: spei_banks
      tags: 
        - Payments
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: array
                    description: 'Objeto que contiene los datos resultantes.'
                    items:
                      properties:
                          code:
                            type: string
                            format: string
                            description: 'Código para identificar el banco cuando se crea una orden de pago.'
                          legalKey:
                            type: string
                            format: string
                            description: 'Clave legal bancaria sin prefijo Banxico.'
                          name:
                            type: string
                            format: string
                            description: 'Nombre del banco.'
                          active:
                            type: boolean
                            format: boolean
                            description: 'Si el banco se encuentra activo.'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /api/v1/spei/account-types:
    get:
      summary: Obtener tipos de cuenta
      deprecated: false
      description: |
        Este endpoint permite obtener todos los tipos de cuenta por los que se puede enviar un pago.
      operationId: spei_account_types
      tags: 
        - Payments
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: array
                    description: 'Objeto que contiene los datos resultantes.'
                    items:
                      properties:
                          key:
                            type: string
                            format: string
                            description: 'Identificador unico para el registro de ordenes.'
                          description:
                            type: string
                            format: string
                            description: 'Descripción del tipo de cuenta.'
                          active:
                            type: boolean
                            format: boolean
                            description: 'Si el tipo de cuenta se encuentra activo. Si es falso, el tipo de cuenta no se puede utilizar para crear pedidos.'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /api/v1/spei/orders/{orderId}/cep:
    get:
      summary: Obtener CEP
      deprecated: false
      description: |
        Permite obtener la url de la transacción donde Banxico expone el comprobante electrónico de pago.
      operationId: spei_cep
      tags: 
        - Payments
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xyayIsImN...
          schema:
            type: string
        - name: orderId
          in: path
          description: 'Identificador unico de la orden de pago'
          required: true
          example: orders/12345
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: string
                    description: 'Url de la transacción de Banxico'
                    example: 'https://www.banxico.org.mx/cep/go?i=90684&s=20210220&d=i6dsXP742O6kt6TB...'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /api/v1/transfers:
    post:
      summary: Realizar un traspaso
      deprecated: false
      description: |
        Este endpoint permite realizar traspasos entre cuentas locales.
      operationId: transfer
      tags: 
        - Transfers
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
          schema:
            type: string
        - name: Kubit-OTP
          in: header
          description: 'Token OTP para realizar la solicitud.'
          required: true
          example: OTP 123456
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payer_account:
                  type: string
                  format: string
                  description: 'Número de cuenta del ordenante'
                  example: '123456789012'
                beneficiary_account:
                  type: string
                  format: string
                  description: 'Número de cuenta del beneficiario'
                  example: '123456789012'
                amount:
                  type: money
                  format: money
                  description: 'Monto del traspaso. El monto máximo del traspaso que se manejará será de: 999,999,999,999.99'
                  example: 10000.00
                concept:
                    type: string
                    description: 'Motivo del traspaso'
                    example: Pago  
                save_beneficiary_account:
                  type: boolean
                  format: boolean
                  description: 'Guardar la cuenta del beneficiario'
                  example: true
                alias_beneficiary_account:
                  type: string
                  format: string
                  description: 'Nombre para guardar la cuenta del beneficiario'
                  example: 'Nombre del beneficiario'
              required:
                - payer_account
                - beneficiary_account
                - amount
                - concept
                - save_beneficiary_account
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '422':
          description: Unprocessable Entity
            <table>
              <tr>
                <th>Código</th>
                <th>Descripción</th>
              </tr>
              <tr>
                <td>CODE-001</td>
                <td>Cuenta no encontrada</td>
              </tr>
              <tr>
                <td>CODE-002</td>
                <td>La cuenta no pertenece al ordenante</td>
              </tr>
              <tr>
                <td>CODE-003</td>
                <td>Fondos insuficientes</td>
              </tr>
              <tr>
                <td>CODE-008</td>
                <td>No es posible realizar traspasos entre diferentes centro de costo</td>
              </tr>
              <tr>
                <td>CODE-016</td>
                <td>Error en la configuración de comisión</td>
              </tr>
              <tr>
                <td>CODE-017</td>
                <td>Configuración de comisión no encontrada</td>
              </tr>
              <tr>
                <td>CODE-018</td>
                <td>Error en el cálculo de la comisión</td>
              </tr>
            </table>
          content: 
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 422
                  message:
                    type: string
                    description: 'Código del error identificado.'
                    example: CODE-001
                    #examples: ['CODE-001', 'CODE-002']
                    #examples:
                    #  -
                    #    - CODE-001 cuenta no encontrada
                    #  -
                    #    - CODE-002 La cuenta no pertenece al ordenante
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /cards/accounts/{accountId}/cards:
    get:
      summary: Obtener tarjetas de una cuenta
      deprecated: false
      description: |
        Este endpoint permite obtener las tarjetas asociadas a una cuenta.
      operationId: get_cards_account
      tags: 
        - Cards
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
          schema:
            type: string
        - name: accountId
          in: path
          description: 'Identificador unico de la cuenta (número de cuenta)'
          required: true
          example: cards/accounts/12345/cards
          schema:
            type: string  
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: object
                    description: 'Objeto que contiene los datos resultantes.'
                    properties:
                        id:
                          type: string
                          format: string
                          description: 'Identificador unico de la tarjeta.'
                        type:
                          type: string
                          format: string
                          description: 'Tipo de tarjeta.'
                        active_function:
                          type: string
                          format: string
                          description: 'Función de la tarjeta, CREDIT o DEBIT.'
                        masked_pan:
                          type: string
                          format: string
                          description: 'Número de la tarjeta.'
                        cardholder_name:
                          type: string
                          format: string
                          description: 'Nombre de la persona asociada a la tarjeta.'
                        product_type:
                          type: string
                          format: string
                          description: 'Tipo de producto.'
                        account_id:
                          type: string
                          format: string
                          description: 'Identificador único de la cuenta asociada a la tarjeta.'
                    required:
                      - id
                      - type
                      - active_function
                      - masked_pan
                      - cardholder_name
                      - product_type
                      - account_id
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /cards/{cardId}:
    get:
      summary: Obtener una tarjeta por id
      deprecated: false
      description: |
        Este endpoint permite obtener una tarjeta por su identificador único.
      operationId: get_card_cardId
      tags: 
        - Cards
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
          schema:
            type: string
        - name: cardId
          in: path
          description: 'Identificador único de la tarjeta'
          required: true
          example: cards/53aa35c8-e659-44b2-882f-f6056e443c99
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: object
                    description: 'Objeto que contiene los datos resultantes.'
                    properties:
                        id:
                          type: string
                          format: string
                          description: 'Identificador unico de la tarjeta.'
                        type:
                          type: string
                          format: string
                          description: 'Tipo de tarjeta.'
                        active_function:
                          type: string
                          format: string
                          description: 'Función de la tarjeta, CREDIT o DEBIT.'
                        masked_pan:
                          type: string
                          format: string
                          description: 'Número de la tarjeta.'
                        cardholder_name:
                          type: string
                          format: string
                          description: 'Nombre de la persona asociada a la tarjeta.'
                        product_type:
                          type: string
                          format: string
                          description: 'Tipo de producto.'
                        status:
                          type: string
                          format: string
                          description: 'Estatus de la tarjeta.'
                        status_reason:
                          type: string
                          format: string
                          description: 'Razón del estatus de la tarjeta.'
                        embossing_setup_id:
                          type: string
                          format: string
                          description: ''
                        embossing_status:
                          type: string
                          format: string
                          description: ''
                        profile_id:
                          type: string
                          format: string
                          description: ''
                    required:
                      - id
                      - type
                      - active_function
                      - masked_pan
                      - cardholder_name
                      - product_type
                      - status
                      - status_reason
                      - embossing_setup_id
                      - embossing_status
                      - profile_id
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /cards/{cardId}/data:
    get:
      summary: Obtener datos de una tarjeta
      deprecated: false
      description: |
        Este endpoint permite obtener los datos sensibles de una tarjeta.
      operationId: get_card_cardData
      tags: 
        - Cards
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
          schema:
            type: string
        - name: cardId
          in: path
          description: 'Identificador único de la tarjeta'
          required: true
          example: cards/53aa35c8-e659-44b2-882f-f6056e443c99
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: object
                    description: 'Objeto que contiene los datos resultantes.'
                    properties:
                      id:
                        type: string
                        format: string
                        description: 'Identificador unico de la tarjeta.'
                      pan:
                        type: string
                        format: string
                        description: 'Número de la tarjeta.'
                      masked_pan:
                        type: string
                        format: string
                        description: 'Número de la tarjeta enmascarado.'
                      cardholder_name:
                        type: string
                        format: string
                        description: 'Nombre de la persona asociada a la tarjeta.'
                      expiration_date:
                        type: string
                        format: string
                        description: 'Fecha de expiración de la tarjeta.'
                      cvv:
                        type: string
                        format: string
                        description: 'CVV de la tarjeta.'
                required:
                  - id
                  - pan
                  - masked_pan
                  - cardholder_name
                  - expiration_date
                  - cvv
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /cards/{cardId}/pin:
    get:
      summary: Obtener PIN de una tarjeta
      deprecated: false
      description: |
        Este endpoint permite obtener el PIN de una tarjeta.
      operationId: get_card_PIN
      tags: 
        - Cards
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
          schema:
            type: string
        - name: cardId
          in: path
          description: 'Identificador único de la tarjeta'
          required: true
          example: cards/53aa35c8-e659-44b2-882f-f6056e443c99
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: object
                    description: 'Objeto que contiene los datos resultantes.'
                    properties:
                      pin:
                        type: string
                        format: string
                        description: 'PIN de la tarjeta.'
                required:
                  - pin
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []
  
  /cards/{cardId}/dynamic-cvv:
    post:
      summary: Crear un cvv dinámico
      deprecated: false
      description: |
        Este endpoint permite crear un cvv dinámico para una tarjeta.
      operationId: create_card_dynamic_cvv
      tags: 
        - Cards
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
          schema:
            type: string
        - name: cardId
          in: path
          description: 'Identificador único de la tarjeta'
          required: true
          example: cards/53aa35c8-e659-44b2-882f-f6056e443c99
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: object
                    description: 'Objeto que contiene los datos resultantes.'
                    properties:
                      card_id:
                        type: string
                        format: string
                        description: 'Identificador único de la tarjeta.'
                      cvv:
                        type: string
                        format: string
                        description: 'CVV dinámico de la tarjeta.'
                      generation_date:
                        type: datetime
                        format: datetime
                        description: 'fecha de generación del cvv dinámico.'  
                      expiration_date:
                        type: datetime
                        format: datetime
                        description: 'fecha de expiración del cvv dinámico.'
                required:
                  - card_id
                  - cvv
                  - generation_date
                  - expiration_date
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

  /cards/{cardId}/dynamic-cvv:
    get:
      summary: Consultar un cvv dinámico
      deprecated: false
      description: |
        Este endpoint permite consultar un cvv dinámico que no haya expirado.
      operationId: get_card_dynamic_cvv
      tags: 
        - Cards
      parameters:
        - name: Kubit-Api-Key
          in: header
          description: 'Clave única para autenticar la solicitud.'
          required: true
          example: KU_ZB2bXjQMh...
          schema:
            type: string
        - name: Bearer Token
          in: header
          description: 'Token para autenticar la solicitud.'
          required: true
          example: Bearer a0Z3JLaE43cDY4eVlaQjJiWGpRTWhzQXMxS0xya...
          schema:
            type: string
        - name: cardId
          in: path
          description: 'Identificador único de la tarjeta'
          required: true
          example: cards/53aa35c8-e659-44b2-882f-f6056e443c99
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    example: "ok"
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 200
                  data:
                    type: object
                    description: 'Objeto que contiene los datos resultantes.'
                    properties:
                      card_id:
                        type: string
                        format: string
                        description: 'Identificador único de la tarjeta.'
                      cvv:
                        type: string
                        format: string
                        description: 'CVV dinámico de la tarjeta.'
                      generation_date:
                        type: datetime
                        format: datetime
                        description: 'fecha de generación del cvv dinámico.'  
                      expiration_date:
                        type: datetime
                        format: datetime
                        description: 'fecha de expiración del cvv dinámico.'
                required:
                  - card_id
                  - cvv
                  - generation_date
                  - expiration_date
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 400
                  message:
                    type: string
                    description: Mensaje de error indicando que la petición se realizo de manera incorrecta.'
                    example: Bad Request
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'fail'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 401
                  message:
                    type: string
                    description: Mensaje de error indicando que no esta autorizado para realizar la acción solicitada.'
                    example: Unauthorized
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud.'
                    examples: 'error'
                  code:
                    type: integer
                    description: 'Código de estado HTTP correspondiente a la respuesta.'
                    example: 500
                  message:
                    type: string
                    description: 'Mensaje de error indicando un fallo interno en el servidor.'
                    example: Internal Server Error
      security: []

components:
  schemas: {}
  securitySchemes: {}
servers: []
